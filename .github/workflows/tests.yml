name: Docker Image CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: set lower case owner name
        run: |
          echo "REPO=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: ${{ github.repository_owner }}
      
      - run: |
          echo "repo ${REPO}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: './backend'
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/backend:latest

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: './frontend'
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/frontend:latest

      - name: Build and push nginx
        uses: docker/build-push-action@v6
        with:
          context: './nginx'
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/nginx:latest

# name: Tests 14 sprint

# on:
#   push:
#     branches:
#       - '**'
#     tags:
#       - '**'
# env:
#   DIR_TESTS: /tmp/tests-back-to-the-film
#   REP_TESTS: https://github.com/Yandex-Practicum/tests-back-to-the-film.git
# jobs:
#   test_backend:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Set up GitHub Actions
#       uses: actions/checkout@v4
#     - name: Use Node.js 18.x
#       uses: actions/setup-node@v4
#       with:
#         node-version: 18.x
#     - name: Get testing lib
#       run: set -eu && git clone --depth 1 $REP_TESTS $DIR_TESTS
#     - name: Run tests
#       run: bash $DIR_TESTS/bin/backend.sh
#   test_endpoints:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Set up GitHub Actions
#       uses: actions/checkout@v4
#     - name: Use Node.js 18.x
#       uses: actions/setup-node@v4
#       with:
#         node-version: 18.x
#     - name: Get testing lib
#       run: set -eu && git clone --depth 1 $REP_TESTS $DIR_TESTS
#     - name: Start project
#       run: bash $DIR_TESTS/bin/start_project.sh
#     - name: Run tests
#       run: bash $DIR_TESTS/bin/endpoints.sh
